package rmi.demo.springtestdbunitdemo.api.controller;

import com.github.springtestdbunit.annotation.DatabaseSetup;
import com.github.springtestdbunit.annotation.ExpectedDatabase;
import com.github.springtestdbunit.assertion.DatabaseAssertionMode;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import javax.sql.DataSource;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;


@RunWith(SpringJUnit4ClassRunner.class)
public class DemoControllerIntegrationTest extends BaseControllerIntegrationTest {

  @Autowired
  private MockMvc mockMvc;

  @Autowired
  private HttpHeaders userHeader;

  @Autowired
  private DataSource dataSource;

  /**
   * TestCase: Send post request to controller, check it returns 201 ok response and data is saved.
   */
  @Test
  @DatabaseSetup(value = "/create/testdata.xml")
  @ExpectedDatabase(value = "/create/expected.xml",
      assertionMode = DatabaseAssertionMode.NON_STRICT)
  public void should_create_and_return_201() throws Exception {

    String request = "{\n" +
        "  \"description\": \"Adam Smith was an 18th-century Scottish economist, philosopher, and author\",\n" +
        "  \"name\": \"Adam Smith\"\n" +
        "}";

    mockMvc.perform(MockMvcRequestBuilders.post("/demo")
        .headers(userHeader)
        .contentType(MediaType.APPLICATION_JSON)
        .content(request))
        .andExpect(status().isCreated())
        .andReturn();

    /*
     * Here check autogenerated date values by Spring Data JPA Auditing
     */
    checkAutogeneratedDate(dataSource);
    checkAutogeneratedDate(dataSource);

    /*
     * Here check autogenerated id value by Spring Data JPA Auditing
     */
    checkAutogeneratedId(dataSource);
  }


  /**
   * TestCase: Send post request to controller, check it returns 204 ok response and data is updated.
   */
  @Test
  @DatabaseSetup(value = "/update/testdata.xml")
  @ExpectedDatabase(value = "/update/expected.xml",
      assertionMode = DatabaseAssertionMode.NON_STRICT)
  public void should_update_and_return_204() throws Exception {

    String request = "{\n" +
        "  \"description\": \"John Winston Ono Lennon was an English singer, songwriter and rhythm guitarist of the Beatles.\",\n" +
        "  \"name\": \"John Lennon\"\n" +
        "}";

    mockMvc.perform(MockMvcRequestBuilders.put("/demo/1")
        .headers(userHeader)
        .contentType(MediaType.APPLICATION_JSON)
        .content(request))
        .andExpect(status().isNoContent())
        .andReturn();


    /*
     * Here check against autogenerated date values by Spring Data JPA Auditing
     */
    checkUpdateDate(dataSource);

  }


}
